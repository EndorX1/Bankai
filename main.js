/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var _=Object.create;var w=Object.defineProperty;var A=Object.getOwnPropertyDescriptor;var V=Object.getOwnPropertyNames;var F=Object.getPrototypeOf,M=Object.prototype.hasOwnProperty;var J=(l,c)=>{for(var e in c)w(l,e,{get:c[e],enumerable:!0})},R=(l,c,e,t)=>{if(c&&typeof c=="object"||typeof c=="function")for(let a of V(c))!M.call(l,a)&&a!==e&&w(l,a,{get:()=>c[a],enumerable:!(t=A(c,a))||t.enumerable});return l};var P=(l,c,e)=>(e=l!=null?_(F(l)):{},R(c||!l||!l.__esModule?w(e,"default",{value:l,enumerable:!0}):e,l)),W=l=>R(w({},"__esModule",{value:!0}),l);var $={};J($,{default:()=>x});module.exports=W($);var n=require("obsidian"),S=require("child_process"),b=P(require("path")),O=P(require("fs")),f="table-view",N={DownloadInterval:10,DownloadDirectory:"",PluginEnabled:!0},E="Name of the file",v="Subject",I="Folder Path to the file",m="Date Added",x=class extends n.Plugin{constructor(){super(...arguments);this.intervalId=null}async onload(){await this.loadSettings(),this.addCommand({id:"SyncDB",name:"Sync Database",callback:()=>this.showSyncModal()}),this.registerView(f,e=>new L(e,this)),this.addRibbonIcon("table","Open Database Searcher",()=>{this.activateView()}),this.addSettingTab(new T(this.app,this)),this.startInterval(this.settings.DownloadInterval)}onunload(){this.intervalId!==null&&(window.clearInterval(this.intervalId),this.intervalId=null)}async loadSettings(){this.settings=Object.assign({},N,await this.loadData())}async isExeRunning(e){return new Promise(t=>{(0,S.exec)("tasklist",(a,s)=>{if(a){t(!1);return}let i=s.toLowerCase().includes(e.toLowerCase());t(i)})})}async activateView(){let{workspace:e}=this.app,t=null,a=e.getLeavesOfType(f);t=a.length>0?a[0]:e.getRightLeaf(!1),await(t==null?void 0:t.setViewState({type:f,active:!0})),e.revealLeaf(t)}startInterval(e){if(!this.settings.PluginEnabled){this.intervalId!==null&&(window.clearInterval(this.intervalId),this.intervalId=null);return}this.intervalId!==null&&window.clearInterval(this.intervalId);let t=Math.max(1,Math.floor(e))*60*1e3;this.intervalId=window.setInterval(()=>this.SyncDatabase("sync"),t),this.registerInterval(this.intervalId)}SyncDatabase(e,t=""){let a=this.app.vault.adapter.basePath,s=this.manifest.id,i=b.join(a,this.settings.DownloadDirectory),r=b.join(a,".obsidian","plugins",s),o=b.join(a,".obsidian","plugins",s,"dependencies","dist","sync","sync.exe"),d=[i,r,e,t];this.isExeRunning("sync.exe").then(h=>{if(h){new n.Notice("Already syncing");return}e==="sync"?(new n.Notice("Started Sync"),this.startInterval(this.settings.DownloadInterval)):(new n.Notice("Started Setup"),this.startInterval(this.settings.DownloadInterval)),(0,S.spawn)(o,d).stdout.on("data",p=>{e==="sync"?(new n.Notice("Finished Sync"),this.reloadTableView(),this.startInterval(this.settings.DownloadInterval)):(new n.Notice("Finished Setup"),this.startInterval(this.settings.DownloadInterval))})})}reloadTableView(){this.app.workspace.getLeavesOfType(f).forEach(t=>{let a=t.view;a&&a.reloadData&&a.reloadData()})}async getSubjects(){try{let e=this.app.vault.adapter,a=`.obsidian/plugins/${this.manifest.id}/dependencies/database.json`,s=await e.read(a),i=JSON.parse(s);return Object.keys(i).filter(r=>r!=="SyncTime")}catch(e){return[]}}showSyncModal(){new k(this.app,this,e=>this.SyncDatabase("sync",e)).open()}resetData(){let e=this.app.vault.adapter.basePath,t=this.manifest.id,a=b.join(e,".obsidian","plugins",t,"dependencies","browser_data");O.rmSync(a,{recursive:!0,force:!0}),new n.Notice("Data reset complete")}},L=class extends n.ItemView{constructor(e,t){super(e);this.allData=[];this.filteredData=[];this.syncTime="";this.plugin=t}getViewType(){return f}getDisplayText(){return"Table View"}async onOpen(){let e=this.containerEl.children[1];if(!e)return;e.empty();let t=e.createEl("div");t.style.display="flex",t.style.justifyContent="space-between",t.style.alignItems="center",t.style.marginBottom="20px",t.createEl("h2",{text:"Data Table"});try{this.allData=await this.loadJsonData(),this.filteredData=[...this.allData];let a=t.createEl("div");a.style.display="flex",a.style.alignItems="center",a.style.gap="15px";let s=a.createEl("button",{text:"Sync"});s.style.padding="6px 12px",s.style.backgroundColor="var(--interactive-accent)",s.style.color="var(--text-on-accent)",s.style.border="none",s.style.borderRadius="4px",s.style.cursor="pointer",s.style.fontWeight="500",s.addEventListener("click",()=>this.plugin.showSyncModal()),s.addEventListener("mouseenter",()=>{s.style.backgroundColor="var(--interactive-accent-hover)"}),s.addEventListener("mouseleave",()=>{s.style.backgroundColor="var(--interactive-accent)"});let i=a.createEl("button",{text:"Reload"});i.style.padding="4px 8px",i.addEventListener("click",()=>this.reloadData());let r=a.createEl("div");r.style.textAlign="right",r.style.fontSize="0.9em",r.style.color="var(--text-muted)",this.syncTime&&(r.createEl("div",{text:"Last Synced:"}),r.createEl("div",{text:this.syncTime})),this.createControls(e),this.createTable(e,this.filteredData)}catch(a){let s=a instanceof Error?a.message:String(a);e.createEl("p",{text:"Error loading data: "+s})}}async loadJsonData(){let e=this.app.vault.adapter,a=`.obsidian/plugins/${this.plugin.manifest.id}/dependencies/database.json`,s=await e.read(a),i=JSON.parse(s);return this.syncTime=i.SyncTime||"",this.extractFiles(i)}async reloadData(){try{this.allData=await this.loadJsonData(),this.filteredData=[...this.allData],this.onOpen()}catch(e){let t=e instanceof Error?e.message:String(e);new n.Notice("Error reloading data: "+t)}}extractFiles(e){let t=[],a=(s,i,r)=>{for(let o in s)if(o==="__FileData__"&&typeof s[o]=="object"&&s[o])for(let d in s[o])t.push({[E]:d,[v]:i,[I]:r,[m]:String(s[o][d])});else if(typeof s[o]=="object"&&s[o]!==null){let d=r?`${r}/${o}`:o;a(s[o],i,d)}};for(let s in e)a(e[s],s,s);return t}createControls(e){let t=e.createEl("div");t.style.marginBottom="20px";let a=t.createEl("input");a.type="text",a.placeholder="Search files...",a.style.width="100%",a.style.padding="8px",a.style.marginBottom="10px",a.addEventListener("input",()=>this.filterData(a.value));let s=t.createEl("div");s.style.marginBottom="10px";let i=s.createEl("button",{text:"Sort by Name"});i.style.marginRight="10px",i.addEventListener("click",()=>this.sortData(E)),s.createEl("button",{text:"Sort by Subject"}).addEventListener("click",()=>this.sortData(v));let o=s.createEl("button",{text:"Sort by Time"});o.style.marginLeft="10px",o.addEventListener("click",()=>this.sortDataReverse(m));let d=t.createEl("div");d.style.marginBottom="10px";let h=[...new Set(this.allData.map(y=>y[v]))],u=d.createEl("button",{text:"All"});u.style.marginRight="10px",u.addEventListener("click",()=>this.filterBySubject("")),h.forEach(y=>{let C=d.createEl("button",{text:y});C.style.marginRight="10px",C.addEventListener("click",()=>this.filterBySubject(y))});let p=t.createEl("div"),D=p.createEl("button",{text:"Today"});D.style.marginRight="10px",D.addEventListener("click",()=>this.filterByDays(0));let j=p.createEl("span",{text:"Last Days:"});j.style.marginRight="5px";let g=p.createEl("input");g.type="number",g.placeholder="7",g.style.width="50px",g.style.marginRight="5px",g.style.marginLeft="10px",g.addEventListener("input",()=>{let y=parseInt(g.value,10);Number.isNaN(y)||this.filterByDays(y)})}filterData(e){let t=e.trim().toLowerCase();t?this.filteredData=this.allData.filter(a=>a[E].toLowerCase().includes(t)||a[v].toLowerCase().includes(t)||a[I].toLowerCase().includes(t)||a[m].toLowerCase().includes(t)):this.filteredData=[...this.allData],this.updateTable()}sortData(e){this.filteredData.sort((t,a)=>t[e].localeCompare(a[e])),this.updateTable()}sortDataReverse(e){this.filteredData.sort((t,a)=>a[e].localeCompare(t[e])),this.updateTable()}filterBySubject(e){e?this.filteredData=this.allData.filter(t=>t[v]===e):this.filteredData=[...this.allData],this.updateTable()}filterByDays(e){let t=new Date,s=new Date(t.getFullYear(),t.getMonth(),t.getDate()-e).toISOString().split("T")[0];this.filteredData=this.allData.filter(i=>i[m].split(" ")[0]>=s),this.updateTable()}updateTable(){let e=this.containerEl.children[1];if(!e)return;let t=e.querySelector("table");t&&t.remove(),this.createTable(e,this.filteredData)}createTable(e,t){if(!t||t.length===0)return;let a=Object.keys(t[0]),s=e.createEl("table");s.style.width="100%",s.style.borderCollapse="collapse";let r=s.createEl("thead").createEl("tr");a.forEach(d=>{let h=r.createEl("th");h.textContent=d,h.style.border="1px solid var(--background-modifier-border)",h.style.padding="8px",h.style.backgroundColor="var(--background-secondary)"});let o=s.createEl("tbody");t.forEach(d=>{let h=o.createEl("tr");a.forEach(u=>{let p=h.createEl("td");p.textContent=d[u],p.style.border="1px solid var(--background-modifier-border)",p.style.padding="8px",u===E&&(p.style.cursor="pointer",p.style.color="var(--text-accent)",p.addEventListener("click",()=>{let D=`${d[I]}/${d[u]}`;navigator.clipboard.writeText(D),new n.Notice("Copied path to clipboard")}))})}),e.appendChild(s)}async onClose(){}},T=class extends n.PluginSettingTab{constructor(e,t){super(e,t);this.plugin=t}display(){let{containerEl:e}=this;e.empty(),new n.Setting(e).setName("Enable").setDesc("Enables Plugin").addToggle(t=>t.setValue(this.plugin.settings.PluginEnabled).onChange(async a=>{this.plugin.settings.PluginEnabled=a,await this.plugin.saveData(this.plugin.settings),this.plugin.startInterval(this.plugin.settings.DownloadInterval)})),new n.Setting(e).setName("Download Interval (min)").setDesc("Time interval to update file database").addText(t=>t.setPlaceholder("Minutes").setValue(String(this.plugin.settings.DownloadInterval)).onChange(async a=>{let s=parseInt(a,10);this.plugin.settings.DownloadInterval=Number.isNaN(s)?N.DownloadInterval:s,await this.plugin.saveData(this.plugin.settings),this.plugin.startInterval(this.plugin.settings.DownloadInterval)})),new n.Setting(e).setName("Directory").setDesc("File saving location").addText(t=>t.setPlaceholder("").setValue(this.plugin.settings.DownloadDirectory).onChange(async a=>{this.plugin.settings.DownloadDirectory=a,await this.plugin.saveData(this.plugin.settings)})),new n.Setting(e).setName("Run Setup").setDesc("Initialize the plugin and download dependencies").addButton(t=>{t.setButtonText("Run Setup").onClick(()=>this.plugin.SyncDatabase("setup"))}),new n.Setting(e).setName("Reset Data").setDesc("Clear browser data and cookies. If you experience problems, try this.").addButton(t=>t.setButtonText("Reset Data").onClick(()=>new B(this.app,()=>this.plugin.resetData()).open()))}},k=class extends n.Modal{constructor(e,t,a){super(e);this.callback=a,this.plugin=t}async onOpen(){let{contentEl:e}=this;e.createEl("h2",{text:"Select Sync Option"});let t=e.createEl("div");t.style.display="flex",t.style.flexDirection="column",t.style.gap="10px",t.style.marginTop="20px",t.createEl("button",{text:"Sync Whole Database"}).addEventListener("click",()=>{this.callback(),this.close()});let s=await this.plugin.getSubjects();s.length>0&&(e.createEl("p",{text:"Or select a specific subject:"}),s.forEach(i=>{t.createEl("button",{text:i}).addEventListener("click",()=>{this.callback(i),this.close()})}))}onClose(){let{contentEl:e}=this;e.empty()}},B=class extends n.Modal{constructor(e,t){super(e);this.callback=t}onOpen(){let{contentEl:e}=this;e.createEl("h2",{text:"Are you sure?"}),e.createEl("p",{text:"You will have to run setup again."});let t=e.createEl("div");t.style.display="flex",t.style.gap="10px",t.style.justifyContent="center",t.style.marginTop="20px",t.createEl("button",{text:"Yes"}).addEventListener("click",()=>{this.callback(),this.close()}),t.createEl("button",{text:"No"}).addEventListener("click",()=>this.close())}onClose(){let{contentEl:e}=this;e.empty()}};
